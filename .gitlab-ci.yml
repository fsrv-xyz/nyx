---
stages:
  - test

lint:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golangci-lint-alpine
  stage: test
  script:
    - golangci-lint run ./... --issues-exit-code 0 --out-format code-climate | tee gl-code-quality-report.json | jq -r '.[] | "\(.location.path):\(.location.lines.begin) \(.description)"'
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    paths:
      - gl-code-quality-report.json

go_fmt:
  image: golang
  stage: test
  script:
    - go fmt ./...

go_test:
  image: golang
  stage: test
  before_script:
    - go install gotest.tools/gotestsum@latest
  script:
    - go fmt ./...
    - go test -v ./...
    - /go/bin/gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml
